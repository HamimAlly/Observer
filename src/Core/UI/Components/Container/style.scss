// container element
.container {
    // containers should be relative to each other
    position: relative;
    min-width: 0; // this fixes a lot of flex / grid issues
    min-height: 0; // this fixes a lot of flex / grid issues
}

// resizable content
.container.resizable {
    // resizable handle
    > .resizable-handle {
        position: absolute;
        z-index: 1;
        opacity: 0;
        background-color: transparent;
        touch-action: none;

        &:hover {
            opacity: 1;
        }
    }

    // resizable handle state while resizing
    &.resizable-resizing > .resizable-handle {
        opacity: 1;
    }

    // horizontal handle
    &.resizable-left,
    &.resizable-right {
        > .resizable-handle {
            top: 0;
            bottom: 0;
            width: 1px;
            height: auto;
            cursor: ew-resize;
        }
    }

    &.resizable-left {
        > .resizable-handle {
            left: 0;
            border-left: 3px solid $bcg-darkest;
        }
    }

    &.resizable-right {
        > .resizable-handle {
            right: 0;
            border-right: 3px solid $bcg-darkest;
        }
    }

    // vertical handle
    &.resizable-top,
    &.resizable-bottom {
        > .resizable-handle {
            left: 0;
            right: 0;
            width: auto;
            height: 1px;
            cursor: ns-resize;
        }
    }

    &.resizable-top {
        > .resizable-handle {
            top: 0;
            border-top: 3px solid $bcg-darkest;
        }
    }

    &.resizable-bottom {
        > .resizable-handle {
            bottom: 0;
            border-bottom: 3px solid $bcg-darkest;
        }
    }
}

.container-dragged {
    outline: 2px solid $text-primary;
    box-sizing: border-box;
    opacity: 0.7;
    z-index: 1;
}

.container-dragged-child {
    outline: 1px dotted $text-active;
    box-sizing: border-box;
}
